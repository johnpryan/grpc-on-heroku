// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

/*
Package helloworld is a generated protocol buffer package.

It is generated from these files:
	helloworld.proto

It has these top-level messages:
	HelloRequest
	HelloReply
*/
package helloworld

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Lastname string `protobuf:"bytes,2,opt,name=lastname" json:"lastname,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloRequest) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Score   int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HelloReply) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "helloworld.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "helloworld.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/helloworld.Greeter/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld.proto",
}

func init() { proto.RegisterFile("helloworld.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0xc7, 0xe9, 0xe2, 0xba, 0xeb, 0x20, 0x28, 0x41, 0xa4, 0x54, 0x0f, 0x4b, 0x41, 0x10, 0xc5,
	0xc6, 0x8f, 0x9b, 0x88, 0x87, 0xbd, 0xe8, 0x71, 0xa9, 0x07, 0xcf, 0xe3, 0x3a, 0xc4, 0x42, 0xda,
	0x89, 0x49, 0xfc, 0xe8, 0xd5, 0x57, 0xf0, 0xd1, 0x7c, 0x05, 0x1f, 0x44, 0x9a, 0xb8, 0xb6, 0x07,
	0x6f, 0xf3, 0xff, 0xe5, 0x9f, 0x1f, 0xc9, 0xc0, 0xf6, 0x13, 0x69, 0xcd, 0x6f, 0x6c, 0xf5, 0x63,
	0x61, 0x2c, 0x7b, 0x16, 0xd0, 0x93, 0x6c, 0x5f, 0x31, 0x2b, 0x4d, 0x12, 0x4d, 0x25, 0xb1, 0x69,
	0xd8, 0xa3, 0xaf, 0xb8, 0x71, 0xb1, 0x99, 0x5f, 0xc3, 0xe6, 0x6d, 0xd7, 0x2d, 0xe9, 0xf9, 0x85,
	0x9c, 0x17, 0x02, 0xd6, 0x1a, 0xac, 0x29, 0x4d, 0x66, 0xc9, 0xe1, 0x46, 0x19, 0x66, 0x91, 0xc1,
	0x54, 0xa3, 0xf3, 0x81, 0x8f, 0x02, 0xff, 0xcb, 0xf9, 0x15, 0xc0, 0xef, 0x7d, 0xa3, 0x5b, 0x91,
	0xc2, 0xa4, 0x26, 0xe7, 0x50, 0xad, 0x04, 0xab, 0x28, 0x76, 0x60, 0xec, 0x96, 0x6c, 0xa3, 0x60,
	0x5c, 0xc6, 0x70, 0xee, 0x61, 0x72, 0x63, 0x89, 0x3c, 0x59, 0x51, 0xc1, 0xf4, 0x0e, 0xdb, 0xe0,
	0x12, 0x69, 0x31, 0xf8, 0xd1, 0xf0, 0x79, 0xd9, 0xee, 0x3f, 0x27, 0x46, 0xb7, 0xf9, 0xf1, 0xc7,
	0xd7, 0xf7, 0xe7, 0xe8, 0x20, 0x9f, 0xc9, 0xd7, 0x33, 0xd9, 0x57, 0xa4, 0x8a, 0x76, 0xe9, 0xb0,
	0x3d, 0x09, 0xf8, 0x32, 0x39, 0x9a, 0x9f, 0xc2, 0x5e, 0xc5, 0x85, 0xb2, 0x66, 0x59, 0xd0, 0x3b,
	0xd6, 0x46, 0x93, 0x1b, 0x68, 0xe7, 0x5b, 0xc1, 0x7b, 0xdf, 0xcd, 0x8b, 0x6e, 0x47, 0x8b, 0xe4,
	0x61, 0x3d, 0x2c, 0xeb, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff, 0x74, 0xe8, 0xf8, 0x27, 0x6a, 0x01,
	0x00, 0x00,
}
